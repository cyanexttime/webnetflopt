name: Laravel CI/CD Pipeline with Docker Hub Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:10.5.8
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: app_db
          MYSQL_ROOT_PASSWORD: 123456789
          MYSQL_PASSWORD: 123456789
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3
      
      redis:
        image: redis:5.0.6-alpine
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/laravel-app:latest ./docker

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/laravel-app:latest

      - name: Start Docker containers
        run: docker-compose up -d

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {30..0}; do
            if docker exec db mysqladmin ping -h"db" --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for database..."
            sleep 2
          done

      - name: Install Composer dependencies
        run: docker-compose exec -T php composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Set application key
        run: docker-compose exec -T php php artisan key:generate

      - name: Run migrations
        run: docker-compose exec -T php php artisan migrate --force

      - name: Run tests
        run: docker-compose exec -T php php artisan test

      - name: Shut down Docker containers
        if: always()
        run: docker-compose down

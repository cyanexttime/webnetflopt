name: Blue/Green Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create active_env.txt if missing
        run: |
          if [ ! -f active_env.txt ]; then
            echo "green" > active_env.txt
          fi

      - name: Determine deployment target (blue/green)
        id: get-env
        run: |
          CURRENT=$( [ -f active_env.txt ] && cat active_env.txt || echo "green" )
          echo "CURRENT=$CURRENT" >> $GITHUB_ENV
          if [ "$CURRENT" = "green" ]; then
            echo "TARGET=blue" >> $GITHUB_ENV
          else
            echo "TARGET=green" >> $GITHUB_ENV
          fi

      - name: Build new app container
        run: docker compose build php-${{ env.TARGET }}

      - name: Start updated services
        run: docker compose up -d php-${{ env.TARGET }} nginx

      - name: Wait for new service to become healthy
        run: |
          echo "Waiting for ${{ env.TARGET }} to become healthy..."
          for i in {1..15}; do
            STATUS=$(docker inspect --format='{{.State.Health.Status}}' webnetflopt_php-${{ env.TARGET }}_1 || echo "starting")
            echo "Health status: $STATUS"
            if [ "$STATUS" = "healthy" ]; then
              echo "Container is healthy!"
              exit 0
            fi
            sleep 5
          done
          echo "Health check failed!"
          exit 1

      - name: Update active_env.txt
        if: success()
        run: echo "${{ env.TARGET }}" > active_env.txt

      - name: Cleanup old service
        if: success()
        run: docker compose stop php-${{ env.CURRENT }}

      - name: Rollback to previous version if new one is unhealthy
        if: failure()
        run: |
          echo "Rolling back to previous version..."
          docker compose stop php-${{ env.TARGET }}
          docker compose up -d php-${{ env.CURRENT }} nginx

name: Build and Deploy webnetflopt

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 123456789
          MYSQL_DATABASE: app_db
          MYSQL_USER: root
          MYSQL_PASSWORD: 123456789
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, exif, pcntl, pdo_mysql, zip, gd
          coverage: xdebug

      # No need to create .env, you already have it in your repo

      - name: Install Composer dependencies
        run: composer install --no-progress --no-interaction --prefer-dist

      # No need for key generation, your .env already has APP_KEY

      - name: Set directory permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Update database host in .env
        run: |
          sed -i 's/DB_HOST=db/DB_HOST=127.0.0.1/g' .env

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..15}; do
            if mysqladmin ping -h127.0.0.1 -uroot -p123456789 --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL to be ready..."
            sleep 4
          done

      - name: Run migrations
        run: php artisan migrate:fresh --seed

      - name: Run tests
        run: php artisan test

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        if: github.event_name != 'pull_request'
        uses: docker/setup-buildx-action@v2

      - name: Build and push PHP Docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/webnetflopt-php:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/webnetflopt-php:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/webnetflopt-php:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/webnetflopt-php:buildcache,mode=max
